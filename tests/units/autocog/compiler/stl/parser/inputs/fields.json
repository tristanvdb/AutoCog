[
  {
    "description": "Simple field with text type",
    "tag": "Field",
    "code": "name is text;",
    "should_pass": true
  },
  {
    "description": "Field with identifier type",
    "tag": "Field",
    "code": "value is integer;",
    "should_pass": true
  },
  {
    "description": "Field with formatted text",
    "tag": "Field",
    "code": "description is text<length=200>;",
    "should_pass": true
  },
  {
    "description": "Field with enum type",
    "tag": "Field",
    "code": "color is enum(\"red\", \"green\", \"blue\");",
    "should_pass": true
  },
  {
    "description": "Field with choice type",
    "tag": "Field",
    "code": "selected is repeat(options);",
    "should_pass": true
  },
  {
    "description": "Field with custom type reference",
    "tag": "Field",
    "code": "user is Person;",
    "should_pass": true
  },
  {
    "description": "Field with parameterized type",
    "tag": "Field",
    "code": "data is Container<size=100>;",
    "should_pass": true
  },
  {
    "description": "Optional field with 0 lower bound",
    "tag": "Field",
    "code": "optional[0:1] is text;",
    "should_pass": true
  },
  {
    "description": "Required single field",
    "tag": "Field",
    "code": "required[1] is text;",
    "should_pass": true
  },
  {
    "description": "Fixed size array field",
    "tag": "Field",
    "code": "pair[2] is integer;",
    "should_pass": true
  },
  {
    "description": "Bounded array field",
    "tag": "Field",
    "code": "items[1:10] is text;",
    "should_pass": true
  },
  {
    "description": "Array with only lower bound",
    "tag": "Field",
    "code": "items[3:] is text;",
    "should_pass": false
  },
  {
    "description": "Array with only upper bound",
    "tag": "Field",
    "code": "items[:5] is text;",
    "should_pass": false
  },
  {
    "description": "Unbounded array (both sides open)",
    "tag": "Field",
    "code": "items[:] is text;",
    "should_pass": false
  },
  {
    "description": "Field with identifier bounds",
    "tag": "Field",
    "code": "items[min:max] is text;",
    "should_pass": true
  },
  {
    "description": "Field with expression bounds",
    "tag": "Field",
    "code": "items[(n - 1):(n + 1)] is text;",
    "should_pass": true
  },
  {
    "description": "Field with struct type",
    "tag": "Field",
    "code": "person is { name is text; age is integer; }",
    "should_pass": true
  },
  {
    "description": "Array of structs",
    "tag": "Field",
    "code": "people[1:5] is { name is text; age is integer; }",
    "should_pass": true
  },
  {
    "description": "Field with underscore in name",
    "tag": "Field",
    "code": "my_field is text;",
    "should_pass": true
  },
  {
    "description": "Field with numbers in name",
    "tag": "Field",
    "code": "field123 is text;",
    "should_pass": true
  },
  {
    "description": "Field starting with underscore",
    "tag": "Field",
    "code": "_private is text;",
    "should_pass": true
  },
  {
    "description": "Field with complex nested type",
    "tag": "Field",
    "code": "data[1:3] is { items[0:10] is text<length=50>; }",
    "should_pass": true
  },
  {
    "description": "Field missing type - fails",
    "tag": "Field",
    "code": "name is",
    "should_pass": false
  },
  {
    "description": "Field missing 'is' keyword - fails",
    "tag": "Field",
    "code": "name text",
    "should_pass": false
  },
  {
    "description": "Field with empty name - fails",
    "tag": "Field",
    "code": "is text",
    "should_pass": false
  },
  {
    "description": "Field with reserved keyword as name - fails",
    "tag": "Field",
    "code": "return is text",
    "should_pass": false
  },
  {
    "description": "Field with number starting name - fails",
    "tag": "Field",
    "code": "123field is text",
    "should_pass": false
  },
  {
    "description": "Field with empty bounds - fails",
    "tag": "Field",
    "code": "items[] is text",
    "should_pass": false
  },
  {
    "description": "Field with invalid bounds separator - fails",
    "tag": "Field",
    "code": "items[1-10] is text",
    "should_pass": false
  },
  {
    "description": "Field with three bounds values - fails",
    "tag": "Field",
    "code": "items[1:5:2] is text",
    "should_pass": false
  },
  {
    "description": "Field with unclosed bracket - fails",
    "tag": "Field",
    "code": "items[1:10 is text",
    "should_pass": false
  },
  {
    "description": "Field with unmatched bracket - fails",
    "tag": "Field",
    "code": "items1:10] is text",
    "should_pass": false
  }
]
